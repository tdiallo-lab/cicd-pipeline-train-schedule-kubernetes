kind: Service
apiVersion: v1
metadata:
  name: train-schedule-service
spec:
  type: NodePort
  selector:
    app: train-schedule
  ports:
  - protocol: TCP
    port: 8080
    nodePort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: train-schedule-deployment
  labels:
    app: train-schedule
spec:
  replicas: 2
  selector:
    matchLabels:
      app: train-schedule
  template:
    metadata:
      labels:
        app: train-schedule
    spec:
      containers:
      - name: train-schedule
        image: $DOCKER_IMAGE_NAME:$BUILD_NUMBER
        ports:
        - containerPort: 8080
Click Commit new file at the bottom of the page.

Add a stage to the Jenkinsfile to perform the deployment to the Kubernetes cluster
Click Jenkinsfile to configure this file. Click the Edit icon in the top-right of this window.

At the top of this file, be sure to change the following line to use your Docker Hub username instead of the instructor's:

DOCKER_IMAGE_NAME = "willbla/train-schedule"
At the bottom of this file, replace the DeployToProduction section with the following:

        stage('DeployToProduction') {
            when {
                branch 'master'
            }
            steps {
                input 'Deploy to Production?'
                milestone(1)
                kubernetesDeploy(
                    kubeconfigId: 'kubeconfig',
                    configs: 'train-schedule-kube.yml',
                    enableConfigSubstitution: true
                )
            }
        }
